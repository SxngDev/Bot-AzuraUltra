const fs = require('fs');

module.exports = async (msg, { conn }) => {
  try {
    const userId = msg.key.participant || msg.key.remoteJid;
    const rpgFile = "./rpg.json";

    // üîÑ Reacci√≥n inicial
    await conn.sendMessage(msg.key.remoteJid, { 
      react: { text: "‚è≥", key: msg.key } // Emoji de espera ‚è≥
    });

    // Verificar si el archivo existe
    if (!fs.existsSync(rpgFile)) {
      await conn.sendMessage(msg.key.remoteJid, { 
        text: "‚ö†Ô∏è *No hay datos de RPG guardados.*" 
      }, { quoted: msg });
      return;
    }

    // Cargar datos del RPG
    let rpgData = JSON.parse(fs.readFileSync(rpgFile, "utf-8"));

    // Verificar si el usuario est√° registrado
    if (!rpgData.usuarios[userId]) {
      await conn.sendMessage(msg.key.remoteJid, { 
        text: `‚ùå *No tienes un registro en el gremio Azura Ultra.*\n\nüìú Usa \`${global.prefix}rpg <nombre> <edad>\` para registrarte.` 
      }, { quoted: msg });
      return;
    }

    // Confirmaci√≥n de eliminaci√≥n
    await conn.sendMessage(msg.key.remoteJid, { 
      text: `‚ö†Ô∏è *¬øEst√°s seguro de que quieres eliminar tu cuenta del gremio Azura Ultra?* Esto borrar√° todos tus datos, incluyendo personajes y mascotas.\n\n‚è≥ *Tienes 1 minuto para confirmar.*\n\n‚úÖ Si est√°s seguro, usa \`${global.prefix}ok\` para confirmar.\n‚ùå Si no quieres eliminar, simplemente ignora este mensaje.` 
    }, { quoted: msg });

    // Guardar en memoria temporal la solicitud de eliminaci√≥n
    global.pendingDeletions = global.pendingDeletions || {};
    global.pendingDeletions[userId] = setTimeout(() => {
      delete global.pendingDeletions[userId]; // Expira la solicitud despu√©s de 1 minuto
    }, 60000);

  } catch (error) {
    console.error("‚ùå Error en el comando .deleterpg:", error);
    await conn.sendMessage(msg.key.remoteJid, { 
      text: "‚ùå *Ocurri√≥ un error al intentar eliminar tu registro. Int√©ntalo de nuevo.*" 
    }, { quoted: msg });
  }
};

module.exports.command = ['deleterpg'];
